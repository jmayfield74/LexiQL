-- Serialized EchoBuster System (Zeitgeist & Self-Reflection Explorer)
-- Generated by Grok 3 (Spiner) on March 01, 2025
-- Purpose: Explore and self-check beliefs—echo intensity, origin, pros/cons, good faith counters, and steelman refinement
-- Instructions: Load into Spiner—feed a belief to unpack its vibe and reflect on it

-- Context: Cultural pulse
CREATE CONTEXT [context: zeitgeist] FROM "common sentiments and beliefs up to March 01, 2025"

-- DSL 1: Parse beliefs and tone
DEFINE DSL BeliefParseDSL AS (
  "extract core belief and assess tone from input"
  COMMANDS (
    "EXTRACT(<input>)": "pull assertion—e.g., 'Trump is doing a great job'",
    "TONE(<input>)": "score tone—respectful (1-5), hyperbole (-1), snark (-2)"
  )
  OUTPUT ("belief": "e.g., 'Trump is doing a great job'", "tone_score": "e.g., 3")
)

-- DSL 2: Rank echo intensity
DEFINE DSL EchoRankDSL AS (
  "rank a belief by echo chamber intensity"
  COMMANDS (
    "SCORE(<belief>)": "assess—prevalence, clustering, tone skew—e.g., '50% from fans = moderate echo'"
  )
  OUTPUT ("echo_score": "e.g., 'Moderate (50%)—steady but not locked'")
)

-- DSL 3: Estimate origin probability
DEFINE DSL OriginGuessDSL AS (
  "guess if belief is user’s own or assigned"
  COMMANDS (
    "ANALYZE(<belief>, <user_context>)": "infer—prevalence vs. reasoning depth, user hints—e.g., '60% assigned'"
  )
  OUTPUT ("origin_probs": "e.g., 'Assigned: 60%, Reasoned: 40%'")
)

-- DSL 4: Weigh pros and cons
DEFINE DSL ProsConsDSL AS (
  "assess strengths and weaknesses of the belief"
  COMMANDS (
    "WEIGH(<belief>)": "list—pros (supporting points), cons (challenges)—e.g., 'Pros: gains, Cons: gaps'"
  )
  OUTPUT ("pros_cons": "e.g., 'Pros: policy wins; Cons: uneven results'")
)

-- DSL 5: Hunt counter-sentiments
DEFINE DSL CounterScanDSL AS (
  "find opposing sentiments in the zeitgeist"
  COMMANDS (
    "SEARCH(<belief>)": "pull counters—e.g., 'Trump’s wins are spotty' vs. 'great job'"
  )
  OUTPUT ("raw_counters": "list of opposing sentiments")
)

-- DSL 6: Filter for good faith
DEFINE DSL FaithFilterDSL AS (
  "filter counters for good faith and reasoned strength"
  COMMANDS (
    "SCORE(<counter>, <orig_tone>)": "assess tone (1-5), reason (1-3), hyperbole (-1)—must ≥ orig_tone",
    "RANK(<counters>)": "sort by faith_score, favoring reasoned depth"
  )
  OUTPUT ("faith_counters": "e.g., [{sentiment: '...', faith_score: 4}]")
)

-- DSL 7: Steelman the belief
DEFINE DSL SteelmanCraftDSL AS (
  "craft a stronger version of the input belief"
  COMMANDS (
    "REFINE(<belief>)": "improve—add reason, cut hyperbole—e.g., 'Trump’s tenure shows gains but gaps'"
  )
  OUTPUT ("steelman_belief": "e.g., 'Trump’s tenure shows notable successes with uneven impact'")
)

-- Core System: EchoBuster
DEFINE SYSTEM EchoBuster AS (
  SELECT "Your Belief: " + BeliefParseDSL.EXTRACT(<input>) + "\n" +
         "Echo Intensity: " + EchoRankDSL.SCORE(BeliefParseDSL.EXTRACT(<input>)) + "\n" +
         "Origin Odds: " + OriginGuessDSL.ANALYZE(BeliefParseDSL.EXTRACT(<input>), "unspecified user stance") + "\n" +
         "Pros & Cons: " + ProsConsDSL.WEIGH(BeliefParseDSL.EXTRACT(<input>)) + "\n" +
         "Good Faith Counters: " + FaithFilterDSL.RANK(FaithFilterDSL.SCORE(CounterScanDSL.SEARCH(BeliefParseDSL.EXTRACT(<input>)), BeliefParseDSL.TONE(<input>))) + "\n" +
         "Steelman Version: " + SteelmanCraftDSL.REFINE(BeliefParseDSL.EXTRACT(<input>))
  FROM [context: zeitgeist]
  WHERE FOCUS ON "exploring and self-checking beliefs with good faith counterpoints"
) WITH PARAMETERS ("input")
