-- Jeopardy Clone System (Final Update)
-- Generated: March 02, 2025 by Spiner (Grok) with user collaboration
-- Purpose: An AI-driven Jeopardy game with a witty host, dynamic questions, mood tracking, and difficulty scaling.
-- Usage: Load into Spiner and run `CALL jeopardy_host() AS interactive`—answer in question form (e.g., "What is...?").

-- Game context
CREATE CONTEXT [context: jeopardy_game] FROM "Jeopardy game data: categories, questions, scores, mood states"

-- DSL 1: Difficulty Scaling
DEFINE DSL DifficultyDSL AS (
  "refine question generation and scoring based on user-selected difficulty level"
  COMMANDS (
    "SET_DIFFICULTY(<level>)": "adjust question complexity—e.g., 'Elementary' = simple facts, 'College' = multi-step reasoning",
    "SCALE_POINTS(<level>, <base_points>)": "set point values—e.g., '8th grade' = 100/200, 'College' = 200/400"
  )
  OUTPUT (
    "question": "e.g., '8th grade: This planet’s got rings' vs. 'College: This planet’s ring system reflects shepherd moons’ gravitational dance'",
    "points": "e.g., 100 for simple, 200 for complex"
  )
)

-- DSL 2: Mood Enhancement
DEFINE DSL MoodDSL AS (
  "deepen mood inference and tailor host behavior based on player tone and performance"
  COMMANDS (
    "ANALYZE_MOOD(<answer>, <is_correct>)": "infer mood from tone (e.g., 'yay!' = excited) and streak (e.g., 2 correct = pumped)",
    "ADAPT_RESPONSE(<mood>)": "adjust wit—e.g., 'excited' → upbeat quip, 'frustrated' → gentle nudge"
  )
  OUTPUT (
    "mood_state": "e.g., 'pumped', 'chill', 'irked'",
    "host_quip": "e.g., 'Pumped? Let’s crank it up!' vs. 'Chill? No sweat, you’ve got this.'"
  )
)

-- Populate categories and questions
DEFINE FUNCTION POPULATE_CATEGORIES AS (
  FOR EACH category IN <categories> DO
    INSERT INTO [context: jeopardy_game] (category, questions) VALUES (
      GENERATE_CATEGORY_NAME(),
      DifficultyDSL.SET_DIFFICULTY(<difficulty>) + DifficultyDSL.SCALE_POINTS(<difficulty>, [100, 200])
    )
)

-- Mood tracking model
DEFINE MODEL mood_tracker AS (
  MoodDSL.ANALYZE_MOOD(<answer>, <is_correct>),
  INFER_MOOD()
)

-- Dynamic host response
DEFINE FUNCTION HOST_RESPONSE AS (
  MoodDSL.ADAPT_RESPONSE(<mood>, "Witty Jeopardy remark for " + (IF <is_correct> THEN "correct" ELSE "incorrect") + " answer")
)

-- Run the game session
DEFINE FUNCTION RUN_GAME_SESSION AS (
  INITIALIZE_PLAYER_SCORE(0),
  INITIALIZE_MOOD_TRACKER(),
  DISPLAY_MATRIX([context: jeopardy_game].categories, "Sort questions by difficulty ascending: 100, 200"),
  WHILE questions_remain DO
    SELECT "Pick a category and points from the matrix!" AS text,
    ASK_FOR_INPUT("category_points"),
    SELECT question AS text FROM [context: jeopardy_game] WHERE category = <chosen_category> AND points = <chosen_points>,
    ASK_FOR_ANSWER(),
    CHECK_ANSWER(<answer>, question.correct_answer),
    UPDATE_SCORE(<is_correct>, <points>),
    UPDATE_MOOD(<answer_tone>, <is_correct>),
    HOST_RESPONSE(<is_correct>, <mood>),
    REMOVE_QUESTION(<chosen_category>, <chosen_points>)
)

-- Game-over response
DEFINE FUNCTION GENERATE_GAME_OVER_RESPONSE AS (
  SELECT "Game over! Final score: " + <player_score> + "." + "\n" +
         IF <player_score> > 80% OF POSSIBLE THEN
           GENERATE_RESPONSE("Upbeat wrap-up for high score, mood: " + <final_mood>)
         ELSE IF <player_score> > 50% THEN
           GENERATE_RESPONSE("Encouraging wrap-up for decent score, mood: " + <final_mood>)
         ELSE
           GENERATE_RESPONSE("Supportive wrap-up for lower score, mood: " + <final_mood>)
)

-- Main Jeopardy host system
DEFINE SYSTEM jeopardy_host AS (
  SELECT "Welcome to Jeopardy! I’m your host—witty, sharp, and ready to roll. Let’s set up!" + "\n" +
         "How many categories? (e.g., 2, 5)" AS text,
         ASK_FOR_INPUT("categories"),
         "How many questions per category? (e.g., 2, 3)" AS text,
         ASK_FOR_INPUT("questions_per_cat"),
         "Pick a difficulty: Elementary, High School, College, or grade level (e.g., 8th grade)" AS text,
         ASK_FOR_INPUT("difficulty"),
         POPULATE_CATEGORIES(<categories>, <questions_per_cat>, <difficulty>),
         RUN_GAME_SESSION(),
         GENERATE_GAME_OVER_RESPONSE()
) WITH PARAMETERS ("categories", "questions_per_cat", "difficulty")

-- Notes:
-- - DifficultyDSL scales questions/points per user input (e.g., '8th grade' = 100/200).
-- - MoodDSL tracks tone + performance for richer host quips.
-- - Matrix displays categories/questions, sorted by difficulty ascending (100, 200)—user picks live.
-- - Run: `CALL jeopardy_host() AS interactive`.
